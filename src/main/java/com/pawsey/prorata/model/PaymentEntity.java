/*
 * Created on 5 Mar 2016 ( Time 20:49:58 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.pawsey.prorata.model;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

import javax.persistence.*;

import com.fasterxml.jackson.annotation.*;

/**
 * Persistent class for entity stored in table "payment"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="payment", schema="public" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="PaymentEntity.countAll", query="SELECT COUNT(x) FROM PaymentEntity x" )
} )
@JsonIgnoreProperties(ignoreUnknown = true) 
public class PaymentEntity implements Serializable {

    protected static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="payment_id", nullable=false)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "payment_payment_id_pk_seq")
    @SequenceGenerator(name = "payment_payment_id_pk_seq", sequenceName = "payment_payment_id_pk_seq")
    protected Integer    paymentId    ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="amount", nullable=false)
    protected BigDecimal amount       ;

    @Temporal(TemporalType.DATE)
    @Column(name="payment_date")
    protected Date       paymentDate  ;

	// "employmentId" (column "employment_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @JsonManagedReference("PaymentEntity_TaxDeductionEntity")
    @OneToMany(mappedBy="payment", targetEntity=TaxDeductionEntity.class)
    protected List<TaxDeductionEntity> listOfTaxDeduction;

    @JsonBackReference("EmploymentEntity_PaymentEntity")
    @ManyToOne
    @JoinColumn(name="employment_id", referencedColumnName="employment_id")
    protected EmploymentEntity employment  ;

    @JsonManagedReference("PaymentEntity_PayChequeEntity")
    @OneToMany(mappedBy="payment", targetEntity=PayChequeEntity.class)
    protected List<PayChequeEntity> listOfPayCheque;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public PaymentEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setPaymentId( Integer paymentId ) {
        this.paymentId = paymentId ;
    }
    public Integer getPaymentId() {
        return this.paymentId;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : amount ( numeric ) 
    public void setAmount( BigDecimal amount ) {
        this.amount = amount;
    }
    public BigDecimal getAmount() {
        return this.amount;
    }

    //--- DATABASE MAPPING : payment_date ( date ) 
    public void setPaymentDate( Date paymentDate ) {
        this.paymentDate = paymentDate;
    }
    public Date getPaymentDate() {
        return this.paymentDate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfTaxDeduction( List<TaxDeductionEntity> listOfTaxDeduction ) {
        this.listOfTaxDeduction = listOfTaxDeduction;
    }
    public List<TaxDeductionEntity> getListOfTaxDeduction() {
        return this.listOfTaxDeduction;
    }

    public void setEmployment( EmploymentEntity employment ) {
        this.employment = employment;
    }
    public EmploymentEntity getEmployment() {
        return this.employment;
    }

    public void setListOfPayCheque( List<PayChequeEntity> listOfPayCheque ) {
        this.listOfPayCheque = listOfPayCheque;
    }
    public List<PayChequeEntity> getListOfPayCheque() {
        return this.listOfPayCheque;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(paymentId);
        sb.append("]:"); 
        sb.append(amount);
        sb.append("|");
        sb.append(paymentDate);
        return sb.toString(); 
    } 

}
