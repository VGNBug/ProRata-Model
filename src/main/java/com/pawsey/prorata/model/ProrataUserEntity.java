/*
 * Created on 5 Mar 2016 ( Time 20:49:58 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.pawsey.prorata.model;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

import com.fasterxml.jackson.annotation.*;

/**
 * Persistent class for entity stored in table "prorata_user"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="prorata_user", schema="public" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="ProrataUserEntity.countAll", query="SELECT COUNT(x) FROM ProrataUserEntity x" )
} )
@JsonIgnoreProperties(ignoreUnknown = true) 
public class ProrataUserEntity implements Serializable {

    protected static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="prorata_user_id", nullable=false)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "prorata_user_prorata_user_id_pk_seq")
    @SequenceGenerator(name = "prorata_user_prorata_user_id_pk_seq", sequenceName = "prorata_user_prorata_user_id_pk_seq")
    protected Integer    prorataUserId ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="first_name", length=100)
    protected String     firstName    ;

    @Column(name="last_name", length=100)
    protected String     lastName     ;

    @Column(name="email", length=100)
    protected String     email        ;

    @Column(name="password", nullable=false, length=20)
    protected String     password     ;

    @Column(name="address", length=100)
    protected String     address      ;

    @Column(name="postcode", length=100)
    protected String     postcode     ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @JsonManagedReference("ProrataUserEntity_SubscriptionEntity")
    @OneToMany(mappedBy="prorataUser", targetEntity=SubscriptionEntity.class)
    protected List<SubscriptionEntity> listOfSubscription;

    @JsonManagedReference("ProrataUserEntity_UserContactEntity")
    @OneToMany(mappedBy="prorataUser", targetEntity=UserContactEntity.class)
    protected List<UserContactEntity> listOfUserContact;

    @JsonManagedReference("ProrataUserEntity_EmploymentEntity")
    @OneToMany(mappedBy="prorataUser", targetEntity=EmploymentEntity.class)
    protected List<EmploymentEntity> listOfEmployment;

    @JsonManagedReference("ProrataUserEntity_AccountEntity")
    @OneToMany(mappedBy="prorataUser", targetEntity=AccountEntity.class)
    protected List<AccountEntity> listOfAccount;

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ProrataUserEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setProrataUserId( Integer prorataUserId ) {
        this.prorataUserId = prorataUserId ;
    }
    public Integer getProrataUserId() {
        return this.prorataUserId;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : first_name ( varchar ) 
    public void setFirstName( String firstName ) {
        this.firstName = firstName;
    }
    public String getFirstName() {
        return this.firstName;
    }

    //--- DATABASE MAPPING : last_name ( varchar ) 
    public void setLastName( String lastName ) {
        this.lastName = lastName;
    }
    public String getLastName() {
        return this.lastName;
    }

    //--- DATABASE MAPPING : email ( varchar ) 
    public void setEmail( String email ) {
        this.email = email;
    }
    public String getEmail() {
        return this.email;
    }

    //--- DATABASE MAPPING : password ( varchar ) 
    public void setPassword( String password ) {
        this.password = password;
    }
    public String getPassword() {
        return this.password;
    }

    //--- DATABASE MAPPING : address ( varchar ) 
    public void setAddress( String address ) {
        this.address = address;
    }
    public String getAddress() {
        return this.address;
    }

    //--- DATABASE MAPPING : postcode ( varchar ) 
    public void setPostcode( String postcode ) {
        this.postcode = postcode;
    }
    public String getPostcode() {
        return this.postcode;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfSubscription( List<SubscriptionEntity> listOfSubscription ) {
        this.listOfSubscription = listOfSubscription;
    }
    public List<SubscriptionEntity> getListOfSubscription() {
        return this.listOfSubscription;
    }

    /**
     * @deprecated pending review of requirements.
     */
    @Deprecated
    public void setListOfUserContact( List<UserContactEntity> listOfUserContact ) {
        this.listOfUserContact = listOfUserContact;
    }

    /**
     * @deprecated pending review of requirements.
     */
    @Deprecated
    public List<UserContactEntity> getListOfUserContact() {
        return this.listOfUserContact;
    }

    public void setListOfEmployment( List<EmploymentEntity> listOfEmployment ) {
        this.listOfEmployment = listOfEmployment;
    }

    public List<EmploymentEntity> getListOfEmployment() {
        return this.listOfEmployment;
    }

    public void setListOfAccount( List<AccountEntity> listOfAccount ) {
        this.listOfAccount = listOfAccount;
    }

    public List<AccountEntity> getListOfAccount() {
        return this.listOfAccount;
    }

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(prorataUserId);
        sb.append("]:"); 
        sb.append(firstName);
        sb.append("|");

        sb.append(lastName);
        sb.append("|");
        sb.append(email);
        sb.append("|");
        sb.append(password);
        sb.append("|");
        sb.append(address);
        sb.append("|");
        sb.append(postcode);
        return sb.toString(); 
    } 

}
